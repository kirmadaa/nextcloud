/*! For license information please see mail.961.a9ea261e3d79c7b0882e.js.LICENSE.txt */
"use strict";(self.webpackChunknextcloud_mail=self.webpackChunknextcloud_mail||[]).push([[961],{88583:(t,a,n)=>{n.d(a,{A:()=>l});var e=n(71354),s=n.n(e),o=n(76314),i=n.n(o)()(s());i.push([t.id,"[data-v-2d27377d] .tabs-component-tabs{display:flex}[data-v-2d27377d] .tabs-component-tab{flex-grow:1;text-align:center;color:var(--color-text-lighter);margin-bottom:10px}[data-v-2d27377d] .tabs-component-tab.is-active{border-bottom:1px solid #000;font-weight:bold}.tabs-component-panels[data-v-2d27377d]{padding-top:20px}.tabs-component-panels label[data-v-2d27377d]{text-align:left;width:100%;display:inline-block}.tabs-component-panels input[data-v-2d27377d],.tabs-component-panels select[data-v-2d27377d]{margin-bottom:10px}","",{version:3,sources:["webpack://./src/components/AccountForm.vue"],names:[],mappings:"AACA,uCACC,YAAA,CAGD,sCACC,WAAA,CACA,iBAAA,CACA,+BAAA,CACA,kBAAA,CAGD,gDACC,4BAAA,CACA,gBAAA,CAGD,wCACC,gBAAA,CAGD,8CACC,eAAA,CACA,UAAA,CACA,oBAAA,CAGD,6FAEC,kBAAA",sourcesContent:["\n:deep(.tabs-component-tabs) {\n\tdisplay: flex;\n}\n\n:deep(.tabs-component-tab) {\n\tflex-grow: 1;\n\ttext-align: center;\n\tcolor: var(--color-text-lighter);\n\tmargin-bottom: 10px;\n}\n\n:deep(.tabs-component-tab.is-active) {\n\tborder-bottom: 1px solid black;\n\tfont-weight: bold;\n}\n\n.tabs-component-panels {\n\tpadding-top: 20px;\n}\n\n.tabs-component-panels label {\n\ttext-align: left;\n\twidth: 100%;\n\tdisplay: inline-block;\n}\n\n.tabs-component-panels input,\n.tabs-component-panels select {\n\tmargin-bottom: 10px;\n}\n"],sourceRoot:""}]);const l=i},22077:(t,a,n)=>{n.d(a,{A:()=>l});var e=n(71354),s=n.n(e),o=n(76314),i=n.n(o)()(s());i.push([t.id,"\nh4[data-v-2d27377d] {\n\ttext-align: left;\n}\n.flex-row[data-v-2d27377d] {\n\tdisplay: flex;\n}\nlabel.button[data-v-2d27377d] {\n\tdisplay: inline-block;\n\ttext-align: center;\n\tflex-grow: 1;\n}\nlabel.primary[data-v-2d27377d] {\n\tcolor: var(--color-main-background);\n}\ninput.primary[data-v-2d27377d] {\n\tcolor: var(--color-main-background);\n}\ninput[type='radio'][data-v-2d27377d] {\n\tdisplay: none;\n}\ninput[type='radio'][disabled] + label[data-v-2d27377d] {\n\tcursor: default;\n\topacity: 0.5;\n}\n.account-form__label--required[data-v-2d27377d]:after {\n\tcontent:\" *\";\n}\n.account-form__heading--required[data-v-2d27377d]:after {\n\tcontent:\" *\";\n}\n.account-form__submit-buttons[data-v-2d27377d] {\n\tdisplay: flex;\n\tjustify-content: center;\n\tmargin-top: 5px;\n}\n.account-form__submit-button[data-v-2d27377d] {\n\tdisplay: flex;\n\talign-items: center;\n}\n.account-form--feedback[data-v-2d27377d] {\n\tcolor: var(--color-text-maxcontrast);\n\tmargin-top: 5px;\n\ttext-align: center;\n}\n.account-form--error[data-v-2d27377d] {\n\ttext-align: left;\n\tfont-size: 14px;\n}\n#account-form[data-v-2d27377d] {\n\tz-index: 1001;\n\twidth: 300px;\n\ttop: 15%;\n\tpadding-bottom: 50px;\n\tmargin: 0 auto;\n\tpadding-top: 30px;\n}\n#account-form input[data-v-2d27377d] {\n\twidth: 100%;\n\tbox-sizing: border-box;\n}\n","",{version:3,sources:["webpack://./src/components/AccountForm.vue"],names:[],mappings:";AAirBA;CACA,gBAAA;AACA;AAEA;CACA,aAAA;AACA;AAEA;CACA,qBAAA;CACA,kBAAA;CACA,YAAA;AACA;AACA;CACA,mCAAA;AACA;AACA;CACA,mCAAA;AACA;AAEA;CACA,aAAA;AACA;AAEA;CACA,eAAA;CACA,YAAA;AACA;AACA;CACA,YAAA;AACA;AACA;CACA,YAAA;AACA;AACA;CACA,aAAA;CACA,uBAAA;CACA,eAAA;AACA;AACA;CACA,aAAA;CACA,mBAAA;AACA;AACA;CACA,oCAAA;CACA,eAAA;CACA,kBAAA;AACA;AACA;CACA,gBAAA;CACA,eAAA;AACA;AACA;CACA,aAAA;CACA,YAAA;CACA,QAAA;CACA,oBAAA;CACA,cAAA;CACA,iBAAA;AACA;AACA;CACA,WAAA;CACA,sBAAA;AACA",sourcesContent:["<template>\n\t<form id=\"account-form\" @submit.prevent=\"onSubmit\">\n\t\t<Tabs :options=\"{useUrlFragment: false, defaultTabHash: settingsPage ? 'manual' : 'auto'}\"\n\t\t\tcache-lifetime=\"0\"\n\t\t\t@changed=\"onModeChanged\">\n\t\t\t<Tab id=\"auto\" key=\"auto\" :name=\"t('mail', 'Auto')\">\n\t\t\t\t<label for=\"auto-name\">{{ t('mail', 'Name') }}</label>\n\t\t\t\t<input id=\"auto-name\"\n\t\t\t\t\tv-model=\"accountName\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t:placeholder=\"t('mail', 'Name')\"\n\t\t\t\t\t:disabled=\"loading\"\n\t\t\t\t\tautofocus>\n\t\t\t\t<label for=\"auto-address\" class=\"account-form__label--required\">{{ t('mail', 'Mail address') }}</label>\n\t\t\t\t<input id=\"auto-address\"\n\t\t\t\t\tv-model.lazy=\"emailAddress\"\n\t\t\t\t\t:disabled=\"loading\"\n\t\t\t\t\t:placeholder=\"t('mail', 'name@example.org')\"\n\t\t\t\t\trequired\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t@blur=\"isValidEmail(emailAddress)\"\n\t\t\t\t\t@change=\"clearFeedback\">\n\t\t\t\t<p v-if=\"!isValidEmail(emailAddress)\" class=\"account-form--error\">\n\t\t\t\t\t{{ t('mail', 'Please enter an email of the format name@example.com') }}\n\t\t\t\t</p>\n\t\t\t\t<label for=\"auto-password\"\n\t\t\t\t\t:class=\"{ 'account-form__label': hasPasswordAlternatives, 'account-form__label--required': !hasPasswordAlternatives }\">{{ t('mail', 'Password') }}</label>\n\n\t\t\t\t<NcPasswordField id=\"auto-password\"\n\t\t\t\t\t:value.sync=\"autoConfig.password\"\n\t\t\t\t\t:disabled=\"loading\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t:label=\"t('mail', 'Password')\"\n\t\t\t\t\t:required=\"!hasPasswordAlternatives\"\n\t\t\t\t\t@change=\"clearFeedback\" />\n\t\t\t</Tab>\n\t\t\t<Tab id=\"manual\" key=\"manual\" :name=\"t('mail', 'Manual')\">\n\t\t\t\t<label for=\"man-name\">{{ t('mail', 'Name') }}</label>\n\t\t\t\t<input id=\"man-name\"\n\t\t\t\t\tv-model=\"accountName\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t:placeholder=\"t('mail', 'Name')\"\n\t\t\t\t\t:disabled=\"loading\">\n\t\t\t\t<label for=\"man-address\" class=\"account-form__label--required\">{{ t('mail', 'Mail address') }}</label>\n\t\t\t\t<input id=\"man-address\"\n\t\t\t\t\tv-model.lazy=\"emailAddress\"\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t:placeholder=\"t('mail', 'name@example.org')\"\n\t\t\t\t\t:disabled=\"loading\"\n\t\t\t\t\trequired\n\t\t\t\t\t@blur=\"isValidEmail(emailAddress)\"\n\t\t\t\t\t@change=\"clearFeedback\">\n\t\t\t\t<p v-if=\"!isValidEmail(emailAddress)\" class=\"account-form--error\">\n\t\t\t\t\t{{ t('mail', 'Please enter an email of the format name@example.com') }}\n\t\t\t\t</p>\n\n\t\t\t\t<h3>{{ t('mail', 'IMAP Settings') }}</h3>\n\t\t\t\t<label for=\"man-imap-host\" class=\"account-form__label--required\">{{ t('mail', 'IMAP Host') }}</label>\n\t\t\t\t<input id=\"man-imap-host\"\n\t\t\t\t\tv-model=\"manualConfig.imapHost\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t:placeholder=\"t('mail', 'IMAP Host')\"\n\t\t\t\t\t:disabled=\"loading\"\n\t\t\t\t\trequired\n\t\t\t\t\t@change=\"clearFeedback\">\n\t\t\t\t<h4 class=\"account-form__heading--required\">\n\t\t\t\t\t{{ t('mail', 'IMAP Security') }}\n\t\t\t\t</h4>\n\t\t\t\t<div class=\"flex-row\">\n\t\t\t\t\t<input id=\"man-imap-sec-none\"\n\t\t\t\t\t\tv-model=\"manualConfig.imapSslMode\"\n\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\tname=\"man-imap-sec\"\n\t\t\t\t\t\t:disabled=\"loading\"\n\t\t\t\t\t\tvalue=\"none\"\n\t\t\t\t\t\t@change=\"onImapSslModeChange\">\n\t\t\t\t\t<label class=\"button\"\n\t\t\t\t\t\tfor=\"man-imap-sec-none\"\n\t\t\t\t\t\t:class=\"{primary: manualConfig.imapSslMode === 'none'}\">{{ t('mail', 'None') }}</label>\n\t\t\t\t\t<input id=\"man-imap-sec-ssl\"\n\t\t\t\t\t\tv-model=\"manualConfig.imapSslMode\"\n\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\tname=\"man-imap-sec\"\n\t\t\t\t\t\t:disabled=\"loading\"\n\t\t\t\t\t\tvalue=\"ssl\"\n\t\t\t\t\t\t@change=\"onImapSslModeChange\">\n\t\t\t\t\t<label class=\"button\"\n\t\t\t\t\t\tfor=\"man-imap-sec-ssl\"\n\t\t\t\t\t\t:class=\"{primary: manualConfig.imapSslMode === 'ssl'}\">{{ t('mail', 'SSL/TLS') }}</label>\n\t\t\t\t\t<input id=\"man-imap-sec-tls\"\n\t\t\t\t\t\tv-model=\"manualConfig.imapSslMode\"\n\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\tname=\"man-imap-sec\"\n\t\t\t\t\t\t:disabled=\"loading\"\n\t\t\t\t\t\tvalue=\"tls\"\n\t\t\t\t\t\t@change=\"onImapSslModeChange\">\n\t\t\t\t\t<label class=\"button\"\n\t\t\t\t\t\tfor=\"man-imap-sec-tls\"\n\t\t\t\t\t\t:class=\"{primary: manualConfig.imapSslMode === 'tls'}\">{{ t('mail', 'STARTTLS') }}</label>\n\t\t\t\t</div>\n\t\t\t\t<label for=\"man-imap-port\" class=\"account-form__label--required\">{{ t('mail', 'IMAP Port') }}</label>\n\t\t\t\t<input id=\"man-imap-port\"\n\t\t\t\t\tv-model=\"manualConfig.imapPort\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t:placeholder=\"t('mail', 'IMAP Port')\"\n\t\t\t\t\t:disabled=\"loading\"\n\t\t\t\t\trequired\n\t\t\t\t\t@change=\"clearFeedback\">\n\t\t\t\t<label for=\"man-imap-user\" class=\"account-form__label--required\">{{ t('mail', 'IMAP User') }}</label>\n\t\t\t\t<input id=\"man-imap-user\"\n\t\t\t\t\tv-model=\"manualConfig.imapUser\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t:placeholder=\"t('mail', 'IMAP User')\"\n\t\t\t\t\t:disabled=\"loading\"\n\t\t\t\t\trequired\n\t\t\t\t\t@change=\"clearFeedback\">\n\t\t\t\t<label v-if=\"!useOauth\" for=\"man-imap-password\" class=\"account-form__label--required\">{{ t('mail', 'IMAP Password') }}</label>\n\t\t\t\t<NcPasswordField v-if=\"!useOauth\"\n\t\t\t\t\tid=\"man-imap-password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t:value.sync=\"manualConfig.imapPassword\"\n\t\t\t\t\t:label=\"t('mail', 'IMAP Password')\"\n\t\t\t\t\t:disabled=\"loading\"\n\t\t\t\t\trequired\n\t\t\t\t\t@change=\"clearFeedback\" />\n\n\t\t\t\t<h3>{{ t('mail', 'SMTP Settings') }}</h3>\n\t\t\t\t<label for=\"man-smtp-host\" class=\"account-form__label--required\">{{ t('mail', 'SMTP Host') }}</label>\n\t\t\t\t<input id=\"man-smtp-host\"\n\t\t\t\t\tref=\"smtpHost\"\n\t\t\t\t\tv-model=\"manualConfig.smtpHost\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"smtp-host\"\n\t\t\t\t\t:placeholder=\"t('mail', 'SMTP Host')\"\n\t\t\t\t\t:disabled=\"loading\"\n\t\t\t\t\trequired\n\t\t\t\t\t@change=\"clearFeedback\">\n\t\t\t\t<h4 class=\"account-form__heading--required\">\n\t\t\t\t\t{{ t('mail', 'SMTP Security') }}\n\t\t\t\t</h4>\n\t\t\t\t<div class=\"flex-row\">\n\t\t\t\t\t<input id=\"man-smtp-sec-none\"\n\t\t\t\t\t\tv-model=\"manualConfig.smtpSslMode\"\n\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\tname=\"man-smtp-sec\"\n\t\t\t\t\t\t:disabled=\"loading\"\n\t\t\t\t\t\tvalue=\"none\"\n\t\t\t\t\t\t@change=\"onSmtpSslModeChange\">\n\t\t\t\t\t<label class=\"button\"\n\t\t\t\t\t\tfor=\"man-smtp-sec-none\"\n\t\t\t\t\t\t:class=\"{primary: manualConfig.smtpSslMode === 'none'}\">{{ t('mail', 'None') }}</label>\n\t\t\t\t\t<input id=\"man-smtp-sec-ssl\"\n\t\t\t\t\t\tv-model=\"manualConfig.smtpSslMode\"\n\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\tname=\"man-smtp-sec\"\n\t\t\t\t\t\t:disabled=\"loading\"\n\t\t\t\t\t\tvalue=\"ssl\"\n\t\t\t\t\t\t@change=\"onSmtpSslModeChange\">\n\t\t\t\t\t<label class=\"button\"\n\t\t\t\t\t\tfor=\"man-smtp-sec-ssl\"\n\t\t\t\t\t\t:class=\"{primary: manualConfig.smtpSslMode === 'ssl'}\">{{ t('mail', 'SSL/TLS') }}</label>\n\t\t\t\t\t<input id=\"man-smtp-sec-tls\"\n\t\t\t\t\t\tv-model=\"manualConfig.smtpSslMode\"\n\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\tname=\"man-smtp-sec\"\n\t\t\t\t\t\t:disabled=\"loading\"\n\t\t\t\t\t\tvalue=\"tls\"\n\t\t\t\t\t\t@change=\"onSmtpSslModeChange\">\n\t\t\t\t\t<label class=\"button\"\n\t\t\t\t\t\tfor=\"man-smtp-sec-tls\"\n\t\t\t\t\t\t:class=\"{primary: manualConfig.smtpSslMode === 'tls'}\">{{ t('mail', 'STARTTLS') }}</label>\n\t\t\t\t</div>\n\t\t\t\t<label for=\"man-smtp-port\" class=\"account-form__label--required\">{{ t('mail', 'SMTP Port') }}</label>\n\t\t\t\t<input id=\"man-smtp-port\"\n\t\t\t\t\tv-model=\"manualConfig.smtpPort\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t:placeholder=\"t('mail', 'SMTP Port')\"\n\t\t\t\t\t:disabled=\"loading\"\n\t\t\t\t\trequired\n\t\t\t\t\t@change=\"clearFeedback\">\n\t\t\t\t<label for=\"man-smtp-user\" class=\"account-form__label--required\">{{ t('mail', 'SMTP User') }}</label>\n\t\t\t\t<input id=\"man-smtp-user\"\n\t\t\t\t\tv-model=\"manualConfig.smtpUser\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t:placeholder=\"t('mail', 'SMTP User')\"\n\t\t\t\t\t:disabled=\"loading\"\n\t\t\t\t\trequired\n\t\t\t\t\t@change=\"clearFeedback\">\n\t\t\t\t<label v-if=\"!useOauth\" for=\"man-smtp-password\" class=\"account-form__label--required\">{{ t('mail', 'SMTP Password') }}</label>\n\t\t\t\t<NcPasswordField v-if=\"!useOauth\"\n\t\t\t\t\tid=\"man-smtp-password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t:value.sync=\"manualConfig.smtpPassword\"\n\t\t\t\t\t:lable=\"t('mail', 'SMTP Password')\"\n\t\t\t\t\t:disabled=\"loading\"\n\t\t\t\t\trequired\n\t\t\t\t\t@change=\"clearFeedback\" />\n\t\t\t</Tab>\n\t\t</Tabs>\n\t\t<div v-if=\"isGoogleAccount && !googleOauthUrl\" class=\"account-form__google-sso\">\n\t\t\t{{ t('mail', 'For the Google account to work with this app you need to enable two-factor authentication for Google and generate an app password.') }}\n\t\t</div>\n\t\t<div class=\"account-form__submit-buttons\">\n\t\t\t<ButtonVue v-if=\"mode === 'auto'\"\n\t\t\t\t:aria-label=\"submitButtonText\"\n\t\t\t\tclass=\"account-form__submit-button\"\n\t\t\t\ttype=\"primary\"\n\t\t\t\tnative-type=\"submit\"\n\t\t\t\t:disabled=\"isDisabledAuto || loading\"\n\t\t\t\t@click.prevent=\"onSubmit\">\n\t\t\t\t<template #icon>\n\t\t\t\t\t<IconLoading v-if=\"loading\" :size=\"20\" />\n\t\t\t\t\t<IconCheck v-else :size=\"20\" />\n\t\t\t\t</template>\n\t\t\t\t{{ submitButtonText }}\n\t\t\t</ButtonVue>\n\t\t\t<ButtonVue v-else-if=\"mode === 'manual'\"\n\t\t\t\t:aria-label=\"submitButtonText\"\n\t\t\t\tclass=\"account-form__submit-button\"\n\t\t\t\ttype=\"primary\"\n\t\t\t\tnative-type=\"submit\"\n\t\t\t\t:disabled=\"isDisabledManual || loading\"\n\t\t\t\t@click.prevent=\"onSubmit\">\n\t\t\t\t<template #icon>\n\t\t\t\t\t<IconLoading v-if=\"loading\" :size=\"20\" />\n\t\t\t\t\t<IconCheck v-else :size=\"20\" />\n\t\t\t\t</template>\n\t\t\t\t{{ submitButtonText }}\n\t\t\t</ButtonVue>\n\t\t</div>\n\t\t<div v-if=\"feedback\" class=\"account-form--feedback\">\n\t\t\t{{ feedback }}\n\t\t</div>\n\t</form>\n</template>\n\n<script>\nimport { Tab, Tabs } from 'vue-tabs-component'\nimport { mapGetters } from 'vuex'\nimport { NcButton as ButtonVue, NcLoadingIcon as IconLoading, NcPasswordField } from '@nextcloud/vue'\nimport IconCheck from 'vue-material-design-icons/Check.vue'\nimport { translate as t } from '@nextcloud/l10n'\n\nimport logger from '../logger.js'\nimport {\n\tqueryIspdb,\n\tqueryMx,\n\ttestConnectivity,\n} from '../service/AutoConfigService.js'\nimport { CONSENT_ABORTED, getUserConsent } from '../integration/oauth.js'\n\nexport default {\n\tname: 'AccountForm',\n\tcomponents: {\n\t\tNcPasswordField,\n\t\tTab,\n\t\tTabs,\n\t\tButtonVue,\n\t\tIconLoading,\n\t\tIconCheck,\n\t},\n\tprops: {\n\t\tdisplayName: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t\temail: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t\taccount: {\n\t\t\ttype: Object,\n\t\t\trequired: false,\n\t\t\tdefault: () => undefined,\n\t\t},\n\t},\n\tdata() {\n\t\tconst fromAccountOr = (prop, def) => {\n\t\t\tif (this.account !== undefined) {\n\t\t\t\treturn this.account[prop]\n\t\t\t} else {\n\t\t\t\treturn def\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tloading: false,\n\t\t\tloadingMessage: undefined,\n\t\t\tmode: 'auto',\n\t\t\taccountName: this.displayName,\n\t\t\temailAddress: this.email,\n\t\t\tautoConfig: {\n\t\t\t\tpassword: '',\n\t\t\t},\n\t\t\tmanualConfig: {\n\t\t\t\timapHost: fromAccountOr('imapHost', ''),\n\t\t\t\timapPort: fromAccountOr('imapPort', 993),\n\t\t\t\timapSslMode: fromAccountOr('imapSslMode', 'ssl'),\n\t\t\t\timapUser: fromAccountOr('imapUser', ''),\n\t\t\t\timapPassword: '',\n\t\t\t\tsmtpHost: fromAccountOr('smtpHost', ''),\n\t\t\t\tsmtpPort: fromAccountOr('smtpPort', 587),\n\t\t\t\tsmtpSslMode: fromAccountOr('smtpSslMode', 'tls'),\n\t\t\t\tsmtpUser: fromAccountOr('smtpUser', ''),\n\t\t\t\tsmtpPassword: '',\n\t\t\t},\n\t\t\tfeedback: null,\n\t\t\tpassword: '',\n\t\t}\n\t},\n\tcomputed: {\n\t\t...mapGetters([\n\t\t\t'googleOauthUrl',\n\t\t\t'microsoftOauthUrl',\n\t\t]),\n\n\t\tsettingsPage() {\n\t\t\treturn this.account !== undefined\n\t\t},\n\n\t\tisDisabledAuto() {\n\t\t\tif (this.loading) {\n\t\t\t\treturn true\n\t\t\t}\n\n\t\t\tif (this.mode !== 'auto') {\n\t\t\t\treturn this.loading\n\t\t\t}\n\n\t\t\treturn !this.emailAddress || !this.isValidEmail(this.emailAddress)\n\t\t\t\t|| (!this.googleOauthUrl && !this.autoConfig.password)\n\t\t},\n\n\t\tisDisabledManual() {\n\t\t\tif (this.loading) {\n\t\t\t\treturn true\n\t\t\t}\n\n\t\t\tif (this.mode !== 'manual') {\n\t\t\t\treturn this.loading\n\t\t\t}\n\n\t\t\treturn !this.emailAddress || !this.isValidEmail(this.emailAddress)\n\t\t\t\t|| !this.manualConfig.imapHost || !this.manualConfig.imapPort\n\t\t\t\t|| !this.manualConfig.imapUser || (!this.useOauth && !this.manualConfig.imapPassword)\n\t\t\t\t|| !this.manualConfig.smtpHost || !this.manualConfig.smtpPort\n\t\t\t\t|| !this.manualConfig.smtpUser || (!this.useOauth && !this.manualConfig.smtpPassword)\n\t\t},\n\n\t\tisGoogleAccount() {\n\t\t\treturn this.manualConfig.imapHost === 'imap.gmail.com'\n\t\t\t\t|| this.manualConfig.smtpHost === 'smtp.gmail.com'\n\t\t},\n\n\t\tisMicrosoftAccount() {\n\t\t\treturn this.manualConfig.imapHost === 'outlook.office365.com'\n\t\t\t\t|| this.manualConfig.smtpHost === 'outlook.office365.com'\n\t\t},\n\n\t\thasPasswordAlternatives() {\n\t\t\treturn !!this.googleOauthUrl\n\t\t\t\t|| !!this.microsoftOauthUrl\n\t\t},\n\n\t\tuseOauth() {\n\t\t\treturn (this.isGoogleAccount && this.googleOauthUrl)\n\t\t\t\t|| (this.isMicrosoftAccount && this.microsoftOauthUrl)\n\t\t},\n\n\t\tsubmitButtonText() {\n\t\t\tif (this.loading) {\n\t\t\t\treturn this.loadingMessage ?? t('mail', 'Connecting')\n\t\t\t}\n\t\t\tif (this.mode === 'manual' && this.useOauth) {\n\t\t\t\treturn this.account ? t('mail', 'Reconnect Google account') : t('mail', 'Sign in with Google')\n\t\t\t}\n\t\t\treturn this.account ? t('mail', 'Save') : t('mail', 'Connect')\n\t\t},\n\t},\n\tmethods: {\n\t\tonModeChanged(e) {\n\t\t\tthis.mode = e.tab.id\n\n\t\t\tif (this.mode === 'manual') {\n\t\t\t\t// IMAP\n\t\t\t\tif (this.manualConfig.imapUser === '') {\n\t\t\t\t\tthis.manualConfig.imapUser = this.emailAddress\n\t\t\t\t}\n\t\t\t\tif (this.manualConfig.imapPassword === '') {\n\t\t\t\t\tthis.manualConfig.imapPassword = this.autoConfig.password\n\t\t\t\t}\n\n\t\t\t\t// SMTP\n\t\t\t\tif (this.manualConfig.smtpUser === '') {\n\t\t\t\t\tthis.manualConfig.smtpUser = this.emailAddress\n\t\t\t\t}\n\t\t\t\tif (this.manualConfig.smtpPassword === '') {\n\t\t\t\t\tthis.manualConfig.smtpPassword = this.autoConfig.password\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonImapSslModeChange() {\n\t\t\tthis.clearFeedback()\n\n\t\t\tswitch (this.manualConfig.imapSslMode) {\n\t\t\tcase 'none':\n\t\t\tcase 'tls':\n\t\t\t\tthis.manualConfig.imapPort = 143\n\t\t\t\tbreak\n\t\t\tcase 'ssl':\n\t\t\t\tthis.manualConfig.imapPort = 993\n\t\t\t\tbreak\n\t\t\t}\n\t\t},\n\t\tonSmtpSslModeChange() {\n\t\t\tthis.clearFeedback()\n\n\t\t\tswitch (this.manualConfig.smtpSslMode) {\n\t\t\tcase 'none':\n\t\t\tcase 'tls':\n\t\t\t\tthis.manualConfig.smtpPort = 587\n\t\t\t\tbreak\n\t\t\tcase 'ssl':\n\t\t\t\tthis.manualConfig.smtpPort = 465\n\t\t\t\tbreak\n\t\t\t}\n\t\t},\n\t\tclearFeedback() {\n\t\t\tthis.feedback = null\n\t\t},\n\t\tapplyAutoConfig(config) {\n\t\t\tif (!config) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\tif (config?.imapConfig) {\n\t\t\t\tthis.manualConfig.imapUser = config.imapConfig.username\n\t\t\t\tthis.manualConfig.imapHost = config.imapConfig.host\n\t\t\t\tthis.manualConfig.imapPort = config.imapConfig.port\n\t\t\t\tthis.manualConfig.imapSslMode = config.imapConfig.security\n\t\t\t\tthis.manualConfig.imapPassword = this.autoConfig.password\n\t\t\t}\n\t\t\tif (config?.smtpConfig) {\n\t\t\t\tthis.manualConfig.smtpUser = config.smtpConfig.username\n\t\t\t\tthis.manualConfig.smtpHost = config.smtpConfig.host\n\t\t\t\tthis.manualConfig.smtpPort = config.smtpConfig.port\n\t\t\t\tthis.manualConfig.smtpSslMode = config.smtpConfig.security\n\t\t\t\tthis.manualConfig.smtpPassword = this.autoConfig.password\n\t\t\t}\n\t\t\treturn true\n\t\t},\n\t\tasync detectConfig() {\n\t\t\tthis.loadingMessage = t('mail', 'Looking up configuration')\n\t\t\tconst config = await queryIspdb(this.emailAddress.split('@').pop(), this.emailAddress)\n\t\t\tlogger.debug('fetched auto config', { config })\n\t\t\t// Apply settings to manual mode before submitting so the user\n\t\t\t// can make modifications if the config fails\n\t\t\tif (this.applyAutoConfig(config)) {\n\t\t\t\tlogger.debug('ISP DB config applied')\n\t\t\t\treturn true\n\t\t\t} else {\n\t\t\t\tconst mxHosts = await queryMx(this.emailAddress)\n\t\t\t\tlogger.debug('MX hosts fetched', { mxHosts })\n\n\t\t\t\tif (mxHosts.length) {\n\t\t\t\t\t// Try the TLD of the MX\n\t\t\t\t\t// FIXME: breaks with eTLDs like .co.uk\n\t\t\t\t\tconst tldMx = mxHosts[0].split('.').splice(-2).join('.').toLowerCase()\n\t\t\t\t\tconst mxConfig = await queryIspdb(\n\t\t\t\t\t\ttldMx,\n\t\t\t\t\t\tthis.emailAddress,\n\t\t\t\t\t)\n\t\t\t\t\tlogger.debug('fetched MX auto config', { mxConfig })\n\t\t\t\t\tif (mxConfig && this.applyAutoConfig(mxConfig)) {\n\t\t\t\t\t\treturn true\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Test the highest priority MX for open IMAP/SMTP ports\n\t\t\t\tthis.loadingMessage = t('mail', 'Checking mail host connectivity')\n\t\t\t\tconst imapAndSmtpHosts = mxHosts.slice(0, 1).flatMap(host => {\n\t\t\t\t\treturn [993, 143, 465, 587].map(port => ({\n\t\t\t\t\t\thost,\n\t\t\t\t\t\tport,\n\t\t\t\t\t}))\n\t\t\t\t})\n\t\t\t\tconst results = await Promise.all(imapAndSmtpHosts.map(async ({ host, port }) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\thost,\n\t\t\t\t\t\tport,\n\t\t\t\t\t\tcanConnect: await testConnectivity(host, port),\n\t\t\t\t\t}\n\t\t\t\t}))\n\t\t\t\tconst firstImapHost = results.filter(({ canConnect, port }) => canConnect && port === 993)[0]\n\t\t\t\tconst firstSmtpHost = results.filter(({ canConnect, port }) => canConnect && [465, 587].includes(port))[0]\n\t\t\t\tlogger.debug('MX connectivity tested', { firstImapHost, firstSmtpHost })\n\t\t\t\tif (firstImapHost && firstSmtpHost) {\n\t\t\t\t\tthis.applyAutoConfig({\n\t\t\t\t\t\timapConfig: {\n\t\t\t\t\t\t\tusername: this.emailAddress, // Assumption\n\t\t\t\t\t\t\thost: firstImapHost.host,\n\t\t\t\t\t\t\tport: firstImapHost.port,\n\t\t\t\t\t\t\tsecurity: firstImapHost.port === 993 ? 'ssl' : 'tls',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tsmtpConfig: {\n\t\t\t\t\t\t\tusername: this.emailAddress, // Assumption\n\t\t\t\t\t\t\thost: firstSmtpHost.host,\n\t\t\t\t\t\t\tport: firstSmtpHost.port,\n\t\t\t\t\t\t\tsecurity: firstSmtpHost.port === 465 ? 'ssl' : 'tls',\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\t\t\t\t\treturn true\n\t\t\t\t} else {\n\t\t\t\t\tthis.feedback = t('mail', 'Configuration discovery failed. Please use the manual settings')\n\t\t\t\t}\n\t\t\t\treturn false\n\t\t\t}\n\t\t},\n\t\tasync onSubmit(event) {\n\t\t\tlogger.debug('account form submitted', { event })\n\t\t\tif (this.isDisabledManual || this.isDisabledAuto) {\n\t\t\t\tlogger.warn('submit is disabled')\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.clearFeedback()\n\t\t\tthis.loading = true\n\t\t\ttry {\n\t\t\t\tif (this.mode === 'auto') {\n\t\t\t\t\tif (!await this.detectConfig()) {\n\t\t\t\t\t\tlogger.warn('Auto mode failed')\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!this.useOauth) {\n\t\t\t\t\tif (this.mode === 'auto' && this.autoConfig.password === '') {\n\t\t\t\t\t\tthis.feedback = t('mail', 'Password required')\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tif (this.mode === 'manual' && (this.manualConfig.imapPassword === '' || this.manualConfig.smtpPassword === '')) {\n\t\t\t\t\t\tthis.feedback = t('mail', 'Password required')\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.loadingMessage = t('mail', 'Testing authentication')\n\t\t\t\tconst data = {\n\t\t\t\t\t...this.manualConfig,\n\t\t\t\t\taccountName: this.accountName,\n\t\t\t\t\temailAddress: this.emailAddress,\n\t\t\t\t\timapHost: this.manualConfig.imapHost.trim(),\n\t\t\t\t\tsmtpHost: this.manualConfig.smtpHost.trim(),\n\t\t\t\t\tauthMethod: this.useOauth ? 'xoauth2' : 'password',\n\t\t\t\t}\n\t\t\t\tif (this.useOauth) {\n\t\t\t\t\tdelete data.imapPassword\n\t\t\t\t\tdelete data.smtpPassword\n\t\t\t\t}\n\t\t\t\tif (!this.account) {\n\t\t\t\t\tconst account = await this.$store.dispatch('startAccountSetup', data)\n\t\t\t\t\tif (this.useOauth) {\n\t\t\t\t\t\tthis.loadingMessage = t('mail', 'Awaiting user consent')\n\t\t\t\t\t\tthis.feedback = t('mail', 'Account created. Please follow the pop-up instructions to link your Google account')\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (this.isGoogleAccount) {\n\t\t\t\t\t\t\t\tawait getUserConsent(\n\t\t\t\t\t\t\t\t\tthis.googleOauthUrl\n\t\t\t\t\t\t\t\t\t\t.replace('_accountId_', account.id)\n\t\t\t\t\t\t\t\t\t\t.replace('_email_', encodeURIComponent(account.emailAddress)),\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Microsoft\n\t\t\t\t\t\t\t\tawait getUserConsent(\n\t\t\t\t\t\t\t\t\tthis.microsoftOauthUrl\n\t\t\t\t\t\t\t\t\t\t.replace('_accountId_', account.id)\n\t\t\t\t\t\t\t\t\t\t.replace('_email_', encodeURIComponent(account.emailAddress)),\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t// Clean up the temporary account before we continue\n\t\t\t\t\t\t\tthis.$store.dispatch('deleteAccount', account)\n\t\t\t\t\t\t\tlogger.info(`Temporary account ${account.id} deleted`)\n\t\t\t\t\t\t\tthrow e\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.clearFeedback()\n\t\t\t\t\t}\n\t\t\t\t\tthis.loadingMessage = t('mail', 'Loading account')\n\t\t\t\t\tawait this.$store.dispatch('finishAccountSetup', { account })\n\t\t\t\t\tthis.$emit('account-created', account)\n\t\t\t\t} else {\n\t\t\t\t\tconst oldAccountData = this.account\n\t\t\t\t\tconst account = await this.$store.dispatch('updateAccount', {\n\t\t\t\t\t\t...data,\n\t\t\t\t\t\taccountId: this.account.id,\n\t\t\t\t\t})\n\t\t\t\t\tif (this.useOauth) {\n\t\t\t\t\t\tthis.loadingMessage = t('mail', 'Awaiting user consent')\n\t\t\t\t\t\tthis.feedback = t('mail', 'Account updated. Please follow the pop-up instructions to reconnect your Google account')\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait getUserConsent(\n\t\t\t\t\t\t\t\tthis.googleOauthUrl\n\t\t\t\t\t\t\t\t\t.replace('_accountId_', account.id)\n\t\t\t\t\t\t\t\t\t.replace('_email_', encodeURIComponent(account.emailAddress)),\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t// Undo changes\n\t\t\t\t\t\t\tawait this.$store.dispatch('updateAccount', {\n\t\t\t\t\t\t\t\t...oldAccountData,\n\t\t\t\t\t\t\t\taccountId: oldAccountData.id,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tlogger.info(`Account ${account.id} update undone`)\n\t\t\t\t\t\t\tthrow e\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.clearFeedback()\n\t\t\t\t\t}\n\t\t\t\t\tthis.feedback = t('mail', 'Account updated')\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error('could not save account details', { error })\n\n\t\t\t\tif (error.data?.error === 'CONNECTION_ERROR') {\n\t\t\t\t\tif (error.data.service === 'IMAP') {\n\t\t\t\t\t\tthis.feedback = t('mail', 'IMAP server is not reachable')\n\t\t\t\t\t} else if (error.data.service === 'SMTP') {\n\t\t\t\t\t\tthis.feedback = t('mail', 'SMTP server is not reachable')\n\t\t\t\t\t}\n\t\t\t\t} else if (error.data?.error === 'AUTHENTICATION') {\n\t\t\t\t\tif (error.data.service === 'IMAP') {\n\t\t\t\t\t\tthis.feedback = t('mail', 'IMAP username or password is wrong')\n\t\t\t\t\t} else if (error.data.service === 'SMTP') {\n\t\t\t\t\t\tthis.feedback = t('mail', 'SMTP username or password is wrong')\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (error.data?.service === 'IMAP') {\n\t\t\t\t\t\tthis.feedback = t('mail', 'IMAP connection failed')\n\t\t\t\t\t} else if (error.data?.service === 'SMTP') {\n\t\t\t\t\t\tthis.feedback = t('mail', 'SMTP connection failed')\n\t\t\t\t\t} else if (error.message === CONSENT_ABORTED) {\n\t\t\t\t\t\tthis.feedback = t('mail', 'Authorization pop-up closed')\n\t\t\t\t\t} else if (error.response?.status === 429) {\n\t\t\t\t\t\tthis.feedback = t('mail', 'Configuration discovery temporarily not available. Please try again later.')\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.feedback = t('mail', 'There was an error while setting up your account')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tthis.loading = false\n\t\t\t\tthis.loadingMessage = undefined\n\t\t\t}\n\t\t},\n\t\tisValidEmail(email) {\n\t\t\tconst regExpEmail = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\t\t\treturn regExpEmail.test(email)\n\t\t},\n\t},\n}\n<\/script>\n\n<style lang=\"scss\" scoped>\n:deep(.tabs-component-tabs) {\n\tdisplay: flex;\n}\n\n:deep(.tabs-component-tab) {\n\tflex-grow: 1;\n\ttext-align: center;\n\tcolor: var(--color-text-lighter);\n\tmargin-bottom: 10px;\n}\n\n:deep(.tabs-component-tab.is-active) {\n\tborder-bottom: 1px solid black;\n\tfont-weight: bold;\n}\n\n.tabs-component-panels {\n\tpadding-top: 20px;\n}\n\n.tabs-component-panels label {\n\ttext-align: left;\n\twidth: 100%;\n\tdisplay: inline-block;\n}\n\n.tabs-component-panels input,\n.tabs-component-panels select {\n\tmargin-bottom: 10px;\n}\n</style>\n\n<style scoped>\nh4 {\n\ttext-align: left;\n}\n\n.flex-row {\n\tdisplay: flex;\n}\n\nlabel.button {\n\tdisplay: inline-block;\n\ttext-align: center;\n\tflex-grow: 1;\n}\nlabel.primary {\n\tcolor: var(--color-main-background);\n}\ninput.primary {\n\tcolor: var(--color-main-background);\n}\n\ninput[type='radio'] {\n\tdisplay: none;\n}\n\ninput[type='radio'][disabled] + label {\n\tcursor: default;\n\topacity: 0.5;\n}\n.account-form__label--required:after {\n\tcontent:\" *\";\n}\n.account-form__heading--required:after {\n\tcontent:\" *\";\n}\n.account-form__submit-buttons {\n\tdisplay: flex;\n\tjustify-content: center;\n\tmargin-top: 5px;\n}\n.account-form__submit-button {\n\tdisplay: flex;\n\talign-items: center;\n}\n.account-form--feedback {\n\tcolor: var(--color-text-maxcontrast);\n\tmargin-top: 5px;\n\ttext-align: center;\n}\n.account-form--error {\n\ttext-align: left;\n\tfont-size: 14px;\n}\n#account-form {\n\tz-index: 1001;\n\twidth: 300px;\n\ttop: 15%;\n\tpadding-bottom: 50px;\n\tmargin: 0 auto;\n\tpadding-top: 30px;\n}\n#account-form input {\n\twidth: 100%;\n\tbox-sizing: border-box;\n}\n</style>\n"],sourceRoot:""}]);const l=i},2961:(t,a,n)=>{n.d(a,{A:()=>H});var e=n(54165),s=n(95353),o=n(76904),i=n(91882),l=n(53334),r=n(85745),m=n(65043),d=n(63814);async function c(t,a){return(await m.Ay.get((0,d.Jv)("/apps/mail/api/autoconfig/ispdb/{host}/{email}",{host:t,email:a}))).data.data}async function u(t,a){return(await m.Ay.get((0,d.Jv)("/apps/mail/api/autoconfig/test?host={host}&port={port}",{host:t,port:a}))).data.data}const p="OAUTH_CONSENT_ABORTED";async function f(t){const a=window.open(t,(0,l.Tl)("mail","Connect OAUTH2 account"),"toolbar=no, menubar=no, width=600, height=700");a.focus(),await new Promise(((t,n)=>{window.addEventListener("message",(a=>{const{data:n}=a;r.A.debug("Child window message received",{event:a}),"DONE"===n&&(r.A.info("OAUTH2 user consent given"),t())}));const e=setInterval((()=>{a.closed&&(clearInterval(e),n(new Error(p)))}),200)}))}const g={name:"AccountForm",components:{NcPasswordField:o.b9,Tab:e.Tab,Tabs:e.Tabs,ButtonVue:o.x1,IconLoading:o.ne,IconCheck:i.A},props:{displayName:{type:String,default:""},email:{type:String,default:""},account:{type:Object,required:!1,default:()=>{}}},data(){const t=(t,a)=>void 0!==this.account?this.account[t]:a;return{loading:!1,loadingMessage:void 0,mode:"auto",accountName:this.displayName,emailAddress:this.email,autoConfig:{password:""},manualConfig:{imapHost:t("imapHost",""),imapPort:t("imapPort",993),imapSslMode:t("imapSslMode","ssl"),imapUser:t("imapUser",""),imapPassword:"",smtpHost:t("smtpHost",""),smtpPort:t("smtpPort",587),smtpSslMode:t("smtpSslMode","tls"),smtpUser:t("smtpUser",""),smtpPassword:""},feedback:null,password:""}},computed:{...(0,s.L8)(["googleOauthUrl","microsoftOauthUrl"]),settingsPage(){return void 0!==this.account},isDisabledAuto(){return!!this.loading||("auto"!==this.mode?this.loading:!this.emailAddress||!this.isValidEmail(this.emailAddress)||!this.googleOauthUrl&&!this.autoConfig.password)},isDisabledManual(){return!!this.loading||("manual"!==this.mode?this.loading:!(this.emailAddress&&this.isValidEmail(this.emailAddress)&&this.manualConfig.imapHost&&this.manualConfig.imapPort&&this.manualConfig.imapUser&&(this.useOauth||this.manualConfig.imapPassword)&&this.manualConfig.smtpHost&&this.manualConfig.smtpPort&&this.manualConfig.smtpUser&&(this.useOauth||this.manualConfig.smtpPassword)))},isGoogleAccount(){return"imap.gmail.com"===this.manualConfig.imapHost||"smtp.gmail.com"===this.manualConfig.smtpHost},isMicrosoftAccount(){return"outlook.office365.com"===this.manualConfig.imapHost||"outlook.office365.com"===this.manualConfig.smtpHost},hasPasswordAlternatives(){return!!this.googleOauthUrl||!!this.microsoftOauthUrl},useOauth(){return this.isGoogleAccount&&this.googleOauthUrl||this.isMicrosoftAccount&&this.microsoftOauthUrl},submitButtonText(){var t;return this.loading?null!==(t=this.loadingMessage)&&void 0!==t?t:(0,l.Tl)("mail","Connecting"):"manual"===this.mode&&this.useOauth?this.account?(0,l.Tl)("mail","Reconnect Google account"):(0,l.Tl)("mail","Sign in with Google"):this.account?(0,l.Tl)("mail","Save"):(0,l.Tl)("mail","Connect")}},methods:{onModeChanged(t){this.mode=t.tab.id,"manual"===this.mode&&(""===this.manualConfig.imapUser&&(this.manualConfig.imapUser=this.emailAddress),""===this.manualConfig.imapPassword&&(this.manualConfig.imapPassword=this.autoConfig.password),""===this.manualConfig.smtpUser&&(this.manualConfig.smtpUser=this.emailAddress),""===this.manualConfig.smtpPassword&&(this.manualConfig.smtpPassword=this.autoConfig.password))},onImapSslModeChange(){switch(this.clearFeedback(),this.manualConfig.imapSslMode){case"none":case"tls":this.manualConfig.imapPort=143;break;case"ssl":this.manualConfig.imapPort=993}},onSmtpSslModeChange(){switch(this.clearFeedback(),this.manualConfig.smtpSslMode){case"none":case"tls":this.manualConfig.smtpPort=587;break;case"ssl":this.manualConfig.smtpPort=465}},clearFeedback(){this.feedback=null},applyAutoConfig(t){return!!t&&(null!=t&&t.imapConfig&&(this.manualConfig.imapUser=t.imapConfig.username,this.manualConfig.imapHost=t.imapConfig.host,this.manualConfig.imapPort=t.imapConfig.port,this.manualConfig.imapSslMode=t.imapConfig.security,this.manualConfig.imapPassword=this.autoConfig.password),null!=t&&t.smtpConfig&&(this.manualConfig.smtpUser=t.smtpConfig.username,this.manualConfig.smtpHost=t.smtpConfig.host,this.manualConfig.smtpPort=t.smtpConfig.port,this.manualConfig.smtpSslMode=t.smtpConfig.security,this.manualConfig.smtpPassword=this.autoConfig.password),!0)},async detectConfig(){this.loadingMessage=(0,l.Tl)("mail","Looking up configuration");const t=await c(this.emailAddress.split("@").pop(),this.emailAddress);if(r.A.debug("fetched auto config",{config:t}),this.applyAutoConfig(t))return r.A.debug("ISP DB config applied"),!0;{const t=await async function(t){return(await m.Ay.get((0,d.Jv)("/apps/mail/api/autoconfig/mx/{email}",{email:t}))).data.data}(this.emailAddress);if(r.A.debug("MX hosts fetched",{mxHosts:t}),t.length){const a=t[0].split(".").splice(-2).join(".").toLowerCase(),n=await c(a,this.emailAddress);if(r.A.debug("fetched MX auto config",{mxConfig:n}),n&&this.applyAutoConfig(n))return!0}this.loadingMessage=(0,l.Tl)("mail","Checking mail host connectivity");const a=t.slice(0,1).flatMap((t=>[993,143,465,587].map((a=>({host:t,port:a}))))),n=await Promise.all(a.map((async t=>{let{host:a,port:n}=t;return{host:a,port:n,canConnect:await u(a,n)}}))),e=n.filter((t=>{let{canConnect:a,port:n}=t;return a&&993===n}))[0],s=n.filter((t=>{let{canConnect:a,port:n}=t;return a&&[465,587].includes(n)}))[0];return r.A.debug("MX connectivity tested",{firstImapHost:e,firstSmtpHost:s}),e&&s?(this.applyAutoConfig({imapConfig:{username:this.emailAddress,host:e.host,port:e.port,security:993===e.port?"ssl":"tls"},smtpConfig:{username:this.emailAddress,host:s.host,port:s.port,security:465===s.port?"ssl":"tls"}}),!0):(this.feedback=(0,l.Tl)("mail","Configuration discovery failed. Please use the manual settings"),!1)}},async onSubmit(t){if(r.A.debug("account form submitted",{event:t}),this.isDisabledManual||this.isDisabledAuto)r.A.warn("submit is disabled");else{this.clearFeedback(),this.loading=!0;try{if("auto"===this.mode&&!await this.detectConfig())return void r.A.warn("Auto mode failed");if(!this.useOauth){if("auto"===this.mode&&""===this.autoConfig.password)return void(this.feedback=(0,l.Tl)("mail","Password required"));if("manual"===this.mode&&(""===this.manualConfig.imapPassword||""===this.manualConfig.smtpPassword))return void(this.feedback=(0,l.Tl)("mail","Password required"))}this.loadingMessage=(0,l.Tl)("mail","Testing authentication");const t={...this.manualConfig,accountName:this.accountName,emailAddress:this.emailAddress,imapHost:this.manualConfig.imapHost.trim(),smtpHost:this.manualConfig.smtpHost.trim(),authMethod:this.useOauth?"xoauth2":"password"};if(this.useOauth&&(delete t.imapPassword,delete t.smtpPassword),this.account){const a=this.account,n=await this.$store.dispatch("updateAccount",{...t,accountId:this.account.id});if(this.useOauth){this.loadingMessage=(0,l.Tl)("mail","Awaiting user consent"),this.feedback=(0,l.Tl)("mail","Account updated. Please follow the pop-up instructions to reconnect your Google account");try{await f(this.googleOauthUrl.replace("_accountId_",n.id).replace("_email_",encodeURIComponent(n.emailAddress)))}catch(t){throw await this.$store.dispatch("updateAccount",{...a,accountId:a.id}),r.A.info("Account ".concat(n.id," update undone")),t}this.clearFeedback()}this.feedback=(0,l.Tl)("mail","Account updated")}else{const a=await this.$store.dispatch("startAccountSetup",t);if(this.useOauth){this.loadingMessage=(0,l.Tl)("mail","Awaiting user consent"),this.feedback=(0,l.Tl)("mail","Account created. Please follow the pop-up instructions to link your Google account");try{this.isGoogleAccount?await f(this.googleOauthUrl.replace("_accountId_",a.id).replace("_email_",encodeURIComponent(a.emailAddress))):await f(this.microsoftOauthUrl.replace("_accountId_",a.id).replace("_email_",encodeURIComponent(a.emailAddress)))}catch(t){throw this.$store.dispatch("deleteAccount",a),r.A.info("Temporary account ".concat(a.id," deleted")),t}this.clearFeedback()}this.loadingMessage=(0,l.Tl)("mail","Loading account"),await this.$store.dispatch("finishAccountSetup",{account:a}),this.$emit("account-created",a)}}catch(t){var a,n;if(r.A.error("could not save account details",{error:t}),"CONNECTION_ERROR"===(null===(a=t.data)||void 0===a?void 0:a.error))"IMAP"===t.data.service?this.feedback=(0,l.Tl)("mail","IMAP server is not reachable"):"SMTP"===t.data.service&&(this.feedback=(0,l.Tl)("mail","SMTP server is not reachable"));else if("AUTHENTICATION"===(null===(n=t.data)||void 0===n?void 0:n.error))"IMAP"===t.data.service?this.feedback=(0,l.Tl)("mail","IMAP username or password is wrong"):"SMTP"===t.data.service&&(this.feedback=(0,l.Tl)("mail","SMTP username or password is wrong"));else{var e,s,o;"IMAP"===(null===(e=t.data)||void 0===e?void 0:e.service)?this.feedback=(0,l.Tl)("mail","IMAP connection failed"):"SMTP"===(null===(s=t.data)||void 0===s?void 0:s.service)?this.feedback=(0,l.Tl)("mail","SMTP connection failed"):t.message===p?this.feedback=(0,l.Tl)("mail","Authorization pop-up closed"):429===(null===(o=t.response)||void 0===o?void 0:o.status)?this.feedback=(0,l.Tl)("mail","Configuration discovery temporarily not available. Please try again later."):this.feedback=(0,l.Tl)("mail","There was an error while setting up your account")}}finally{this.loading=!1,this.loadingMessage=void 0}}},isValidEmail:t=>/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(t)}};var h=n(85072),A=n.n(h),C=n(97825),b=n.n(C),v=n(77659),_=n.n(v),w=n(55056),P=n.n(w),y=n(10540),M=n.n(y),S=n(41113),x=n.n(S),k=n(88583),T={};T.styleTagTransform=x(),T.setAttributes=P(),T.insert=_().bind(null,"head"),T.domAPI=b(),T.insertStyleElement=M(),A()(k.A,T),k.A&&k.A.locals&&k.A.locals;var I=n(22077),U={};U.styleTagTransform=x(),U.setAttributes=P(),U.insert=_().bind(null,"head"),U.domAPI=b(),U.insertStyleElement=M(),A()(I.A,U),I.A&&I.A.locals&&I.A.locals;const H=(0,n(14486).A)(g,(function(){var t=this,a=t._self._c;return a("form",{attrs:{id:"account-form"},on:{submit:function(a){return a.preventDefault(),t.onSubmit.apply(null,arguments)}}},[a("Tabs",{attrs:{options:{useUrlFragment:!1,defaultTabHash:t.settingsPage?"manual":"auto"},"cache-lifetime":"0"},on:{changed:t.onModeChanged}},[a("Tab",{key:"auto",attrs:{id:"auto",name:t.t("mail","Auto")}},[a("label",{attrs:{for:"auto-name"}},[t._v(t._s(t.t("mail","Name")))]),t._v(" "),a("input",{directives:[{name:"model",rawName:"v-model",value:t.accountName,expression:"accountName"}],attrs:{id:"auto-name",type:"text",placeholder:t.t("mail","Name"),disabled:t.loading,autofocus:""},domProps:{value:t.accountName},on:{input:function(a){a.target.composing||(t.accountName=a.target.value)}}}),t._v(" "),a("label",{staticClass:"account-form__label--required",attrs:{for:"auto-address"}},[t._v(t._s(t.t("mail","Mail address")))]),t._v(" "),a("input",{directives:[{name:"model",rawName:"v-model.lazy",value:t.emailAddress,expression:"emailAddress",modifiers:{lazy:!0}}],attrs:{id:"auto-address",disabled:t.loading,placeholder:t.t("mail","name@example.org"),required:"",type:"email"},domProps:{value:t.emailAddress},on:{blur:function(a){return t.isValidEmail(t.emailAddress)},change:[function(a){t.emailAddress=a.target.value},t.clearFeedback]}}),t._v(" "),t.isValidEmail(t.emailAddress)?t._e():a("p",{staticClass:"account-form--error"},[t._v("\n\t\t\t\t"+t._s(t.t("mail","Please enter an email of the format name@example.com"))+"\n\t\t\t")]),t._v(" "),a("label",{class:{"account-form__label":t.hasPasswordAlternatives,"account-form__label--required":!t.hasPasswordAlternatives},attrs:{for:"auto-password"}},[t._v(t._s(t.t("mail","Password")))]),t._v(" "),a("NcPasswordField",{attrs:{id:"auto-password",value:t.autoConfig.password,disabled:t.loading,type:"password",label:t.t("mail","Password"),required:!t.hasPasswordAlternatives},on:{"update:value":function(a){return t.$set(t.autoConfig,"password",a)},change:t.clearFeedback}})],1),t._v(" "),a("Tab",{key:"manual",attrs:{id:"manual",name:t.t("mail","Manual")}},[a("label",{attrs:{for:"man-name"}},[t._v(t._s(t.t("mail","Name")))]),t._v(" "),a("input",{directives:[{name:"model",rawName:"v-model",value:t.accountName,expression:"accountName"}],attrs:{id:"man-name",type:"text",placeholder:t.t("mail","Name"),disabled:t.loading},domProps:{value:t.accountName},on:{input:function(a){a.target.composing||(t.accountName=a.target.value)}}}),t._v(" "),a("label",{staticClass:"account-form__label--required",attrs:{for:"man-address"}},[t._v(t._s(t.t("mail","Mail address")))]),t._v(" "),a("input",{directives:[{name:"model",rawName:"v-model.lazy",value:t.emailAddress,expression:"emailAddress",modifiers:{lazy:!0}}],attrs:{id:"man-address",type:"email",placeholder:t.t("mail","name@example.org"),disabled:t.loading,required:""},domProps:{value:t.emailAddress},on:{blur:function(a){return t.isValidEmail(t.emailAddress)},change:[function(a){t.emailAddress=a.target.value},t.clearFeedback]}}),t._v(" "),t.isValidEmail(t.emailAddress)?t._e():a("p",{staticClass:"account-form--error"},[t._v("\n\t\t\t\t"+t._s(t.t("mail","Please enter an email of the format name@example.com"))+"\n\t\t\t")]),t._v(" "),a("h3",[t._v(t._s(t.t("mail","IMAP Settings")))]),t._v(" "),a("label",{staticClass:"account-form__label--required",attrs:{for:"man-imap-host"}},[t._v(t._s(t.t("mail","IMAP Host")))]),t._v(" "),a("input",{directives:[{name:"model",rawName:"v-model",value:t.manualConfig.imapHost,expression:"manualConfig.imapHost"}],attrs:{id:"man-imap-host",type:"text",placeholder:t.t("mail","IMAP Host"),disabled:t.loading,required:""},domProps:{value:t.manualConfig.imapHost},on:{change:t.clearFeedback,input:function(a){a.target.composing||t.$set(t.manualConfig,"imapHost",a.target.value)}}}),t._v(" "),a("h4",{staticClass:"account-form__heading--required"},[t._v("\n\t\t\t\t"+t._s(t.t("mail","IMAP Security"))+"\n\t\t\t")]),t._v(" "),a("div",{staticClass:"flex-row"},[a("input",{directives:[{name:"model",rawName:"v-model",value:t.manualConfig.imapSslMode,expression:"manualConfig.imapSslMode"}],attrs:{id:"man-imap-sec-none",type:"radio",name:"man-imap-sec",disabled:t.loading,value:"none"},domProps:{checked:t._q(t.manualConfig.imapSslMode,"none")},on:{change:[function(a){return t.$set(t.manualConfig,"imapSslMode","none")},t.onImapSslModeChange]}}),t._v(" "),a("label",{staticClass:"button",class:{primary:"none"===t.manualConfig.imapSslMode},attrs:{for:"man-imap-sec-none"}},[t._v(t._s(t.t("mail","None")))]),t._v(" "),a("input",{directives:[{name:"model",rawName:"v-model",value:t.manualConfig.imapSslMode,expression:"manualConfig.imapSslMode"}],attrs:{id:"man-imap-sec-ssl",type:"radio",name:"man-imap-sec",disabled:t.loading,value:"ssl"},domProps:{checked:t._q(t.manualConfig.imapSslMode,"ssl")},on:{change:[function(a){return t.$set(t.manualConfig,"imapSslMode","ssl")},t.onImapSslModeChange]}}),t._v(" "),a("label",{staticClass:"button",class:{primary:"ssl"===t.manualConfig.imapSslMode},attrs:{for:"man-imap-sec-ssl"}},[t._v(t._s(t.t("mail","SSL/TLS")))]),t._v(" "),a("input",{directives:[{name:"model",rawName:"v-model",value:t.manualConfig.imapSslMode,expression:"manualConfig.imapSslMode"}],attrs:{id:"man-imap-sec-tls",type:"radio",name:"man-imap-sec",disabled:t.loading,value:"tls"},domProps:{checked:t._q(t.manualConfig.imapSslMode,"tls")},on:{change:[function(a){return t.$set(t.manualConfig,"imapSslMode","tls")},t.onImapSslModeChange]}}),t._v(" "),a("label",{staticClass:"button",class:{primary:"tls"===t.manualConfig.imapSslMode},attrs:{for:"man-imap-sec-tls"}},[t._v(t._s(t.t("mail","STARTTLS")))])]),t._v(" "),a("label",{staticClass:"account-form__label--required",attrs:{for:"man-imap-port"}},[t._v(t._s(t.t("mail","IMAP Port")))]),t._v(" "),a("input",{directives:[{name:"model",rawName:"v-model",value:t.manualConfig.imapPort,expression:"manualConfig.imapPort"}],attrs:{id:"man-imap-port",type:"number",placeholder:t.t("mail","IMAP Port"),disabled:t.loading,required:""},domProps:{value:t.manualConfig.imapPort},on:{change:t.clearFeedback,input:function(a){a.target.composing||t.$set(t.manualConfig,"imapPort",a.target.value)}}}),t._v(" "),a("label",{staticClass:"account-form__label--required",attrs:{for:"man-imap-user"}},[t._v(t._s(t.t("mail","IMAP User")))]),t._v(" "),a("input",{directives:[{name:"model",rawName:"v-model",value:t.manualConfig.imapUser,expression:"manualConfig.imapUser"}],attrs:{id:"man-imap-user",type:"text",placeholder:t.t("mail","IMAP User"),disabled:t.loading,required:""},domProps:{value:t.manualConfig.imapUser},on:{change:t.clearFeedback,input:function(a){a.target.composing||t.$set(t.manualConfig,"imapUser",a.target.value)}}}),t._v(" "),t.useOauth?t._e():a("label",{staticClass:"account-form__label--required",attrs:{for:"man-imap-password"}},[t._v(t._s(t.t("mail","IMAP Password")))]),t._v(" "),t.useOauth?t._e():a("NcPasswordField",{attrs:{id:"man-imap-password",type:"password",value:t.manualConfig.imapPassword,label:t.t("mail","IMAP Password"),disabled:t.loading,required:""},on:{"update:value":function(a){return t.$set(t.manualConfig,"imapPassword",a)},change:t.clearFeedback}}),t._v(" "),a("h3",[t._v(t._s(t.t("mail","SMTP Settings")))]),t._v(" "),a("label",{staticClass:"account-form__label--required",attrs:{for:"man-smtp-host"}},[t._v(t._s(t.t("mail","SMTP Host")))]),t._v(" "),a("input",{directives:[{name:"model",rawName:"v-model",value:t.manualConfig.smtpHost,expression:"manualConfig.smtpHost"}],ref:"smtpHost",attrs:{id:"man-smtp-host",type:"text",name:"smtp-host",placeholder:t.t("mail","SMTP Host"),disabled:t.loading,required:""},domProps:{value:t.manualConfig.smtpHost},on:{change:t.clearFeedback,input:function(a){a.target.composing||t.$set(t.manualConfig,"smtpHost",a.target.value)}}}),t._v(" "),a("h4",{staticClass:"account-form__heading--required"},[t._v("\n\t\t\t\t"+t._s(t.t("mail","SMTP Security"))+"\n\t\t\t")]),t._v(" "),a("div",{staticClass:"flex-row"},[a("input",{directives:[{name:"model",rawName:"v-model",value:t.manualConfig.smtpSslMode,expression:"manualConfig.smtpSslMode"}],attrs:{id:"man-smtp-sec-none",type:"radio",name:"man-smtp-sec",disabled:t.loading,value:"none"},domProps:{checked:t._q(t.manualConfig.smtpSslMode,"none")},on:{change:[function(a){return t.$set(t.manualConfig,"smtpSslMode","none")},t.onSmtpSslModeChange]}}),t._v(" "),a("label",{staticClass:"button",class:{primary:"none"===t.manualConfig.smtpSslMode},attrs:{for:"man-smtp-sec-none"}},[t._v(t._s(t.t("mail","None")))]),t._v(" "),a("input",{directives:[{name:"model",rawName:"v-model",value:t.manualConfig.smtpSslMode,expression:"manualConfig.smtpSslMode"}],attrs:{id:"man-smtp-sec-ssl",type:"radio",name:"man-smtp-sec",disabled:t.loading,value:"ssl"},domProps:{checked:t._q(t.manualConfig.smtpSslMode,"ssl")},on:{change:[function(a){return t.$set(t.manualConfig,"smtpSslMode","ssl")},t.onSmtpSslModeChange]}}),t._v(" "),a("label",{staticClass:"button",class:{primary:"ssl"===t.manualConfig.smtpSslMode},attrs:{for:"man-smtp-sec-ssl"}},[t._v(t._s(t.t("mail","SSL/TLS")))]),t._v(" "),a("input",{directives:[{name:"model",rawName:"v-model",value:t.manualConfig.smtpSslMode,expression:"manualConfig.smtpSslMode"}],attrs:{id:"man-smtp-sec-tls",type:"radio",name:"man-smtp-sec",disabled:t.loading,value:"tls"},domProps:{checked:t._q(t.manualConfig.smtpSslMode,"tls")},on:{change:[function(a){return t.$set(t.manualConfig,"smtpSslMode","tls")},t.onSmtpSslModeChange]}}),t._v(" "),a("label",{staticClass:"button",class:{primary:"tls"===t.manualConfig.smtpSslMode},attrs:{for:"man-smtp-sec-tls"}},[t._v(t._s(t.t("mail","STARTTLS")))])]),t._v(" "),a("label",{staticClass:"account-form__label--required",attrs:{for:"man-smtp-port"}},[t._v(t._s(t.t("mail","SMTP Port")))]),t._v(" "),a("input",{directives:[{name:"model",rawName:"v-model",value:t.manualConfig.smtpPort,expression:"manualConfig.smtpPort"}],attrs:{id:"man-smtp-port",type:"number",placeholder:t.t("mail","SMTP Port"),disabled:t.loading,required:""},domProps:{value:t.manualConfig.smtpPort},on:{change:t.clearFeedback,input:function(a){a.target.composing||t.$set(t.manualConfig,"smtpPort",a.target.value)}}}),t._v(" "),a("label",{staticClass:"account-form__label--required",attrs:{for:"man-smtp-user"}},[t._v(t._s(t.t("mail","SMTP User")))]),t._v(" "),a("input",{directives:[{name:"model",rawName:"v-model",value:t.manualConfig.smtpUser,expression:"manualConfig.smtpUser"}],attrs:{id:"man-smtp-user",type:"text",placeholder:t.t("mail","SMTP User"),disabled:t.loading,required:""},domProps:{value:t.manualConfig.smtpUser},on:{change:t.clearFeedback,input:function(a){a.target.composing||t.$set(t.manualConfig,"smtpUser",a.target.value)}}}),t._v(" "),t.useOauth?t._e():a("label",{staticClass:"account-form__label--required",attrs:{for:"man-smtp-password"}},[t._v(t._s(t.t("mail","SMTP Password")))]),t._v(" "),t.useOauth?t._e():a("NcPasswordField",{attrs:{id:"man-smtp-password",type:"password",value:t.manualConfig.smtpPassword,lable:t.t("mail","SMTP Password"),disabled:t.loading,required:""},on:{"update:value":function(a){return t.$set(t.manualConfig,"smtpPassword",a)},change:t.clearFeedback}})],1)],1),t._v(" "),t.isGoogleAccount&&!t.googleOauthUrl?a("div",{staticClass:"account-form__google-sso"},[t._v("\n\t\t"+t._s(t.t("mail","For the Google account to work with this app you need to enable two-factor authentication for Google and generate an app password."))+"\n\t")]):t._e(),t._v(" "),a("div",{staticClass:"account-form__submit-buttons"},["auto"===t.mode?a("ButtonVue",{staticClass:"account-form__submit-button",attrs:{"aria-label":t.submitButtonText,type:"primary","native-type":"submit",disabled:t.isDisabledAuto||t.loading},on:{click:function(a){return a.preventDefault(),t.onSubmit.apply(null,arguments)}},scopedSlots:t._u([{key:"icon",fn:function(){return[t.loading?a("IconLoading",{attrs:{size:20}}):a("IconCheck",{attrs:{size:20}})]},proxy:!0}],null,!1,4145190044)},[t._v("\n\t\t\t"+t._s(t.submitButtonText)+"\n\t\t")]):"manual"===t.mode?a("ButtonVue",{staticClass:"account-form__submit-button",attrs:{"aria-label":t.submitButtonText,type:"primary","native-type":"submit",disabled:t.isDisabledManual||t.loading},on:{click:function(a){return a.preventDefault(),t.onSubmit.apply(null,arguments)}},scopedSlots:t._u([{key:"icon",fn:function(){return[t.loading?a("IconLoading",{attrs:{size:20}}):a("IconCheck",{attrs:{size:20}})]},proxy:!0}])},[t._v("\n\t\t\t"+t._s(t.submitButtonText)+"\n\t\t")]):t._e()],1),t._v(" "),t.feedback?a("div",{staticClass:"account-form--feedback"},[t._v("\n\t\t"+t._s(t.feedback)+"\n\t")]):t._e()],1)}),[],!1,null,"2d27377d",null).exports}}]);
//# sourceMappingURL=mail.961.a9ea261e3d79c7b0882e.js.map